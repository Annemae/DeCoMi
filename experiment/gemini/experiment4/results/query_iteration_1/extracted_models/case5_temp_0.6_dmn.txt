<?xml version="1.0" encoding="UTF-8"?>
<definitions xmlns="https://www.omg.org/spec/DMN/20191111/MODEL/" xmlns:dmndi="https://www.omg.org/spec/DMN/20191111/DMNDI/" xmlns:dc="http://www.omg.org/spec/DMN/20180521/DC/" xmlns:di="http://www.omg.org/spec/DMN/20180521/DI/" id="definitions_0" name="definitions" namespace="http://camunda.org/schema/1.0/dmn" exporter="CustomTool" exporterVersion="1.0.0">
  <inputData id="InputData_0" name="val" />
  <inputData id="InputData_1" name="start, end" />
  <inputData id="InputData_2" name="sum" />
  <inputData id="InputData_3" name="radix" />
  <inputData id="InputData_4" name="nfe" />
  <inputData id="InputData_5" name="c" />
  <inputData id="InputData_6" name="MSJVM_BUG_WORKAROUND" />
  <inputData id="InputData_7" name="endchar" />
  <inputData id="InputData_8" name="c1" />
  <inputData id="InputData_9" name="start, len" />
  <inputData id="InputData_10" name="startChar" />
  <inputData id="InputData_11" name="c2" />
  <inputData id="InputData_12" name="ex" />
  <inputData id="InputData_13" name="start, end, s" />
  <decision id="Decision_0" name="toNumber(Object val)">
    <informationRequirement id="InformationRequirement_0">
      <requiredInput href="#InputData_0" />
    </informationRequirement>
    <decisionTable id="DecisionTable_0">
      <input id="InputClause_0" label="val">
        <inputExpression id="LiteralExpression_0" typeRef="boolean">
          <text></text>
        </inputExpression>
      </input>
      <output id="OutputClause_0" label="toNumber(Object val)" typeRef="string" />
      <rule id="DecisionRule_0">
        <inputEntry id="UnaryTests_0">
          <text>val instanceof Number</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_1">
          <text>return ((Number) val).doubleValue();</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_1">
        <inputEntry id="UnaryTests_1">
          <text>val == null</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_2">
          <text>return +0.0;</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_2">
        <inputEntry id="UnaryTests_2">
          <text>val == Undefined.instance</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_3">
          <text>return NaN;</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_3">
        <inputEntry id="UnaryTests_3">
          <text>val instanceof String</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_4">
          <text>return toNumber((String) val);</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_4">
        <inputEntry id="UnaryTests_4">
          <text>val instanceof Boolean</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_5">
          <text>return ((Boolean) val).booleanValue() ? 1 : +0.0;</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_5">
        <inputEntry id="UnaryTests_5">
          <text>val instanceof Scriptable</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_6">
          <text>throw errorWithClassName("msg.primitive.expected", val);</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_6">
        <inputEntry id="UnaryTests_6">
          <text>-</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_7">
          <text>return NaN;</text>
        </outputEntry>
      </rule>
    </decisionTable>
  </decision>
  <decision id="Decision_1" name="toNumber(String s)">
    <informationRequirement id="InformationRequirement_1">
      <requiredDecision href="#Decision_0" />
    </informationRequirement>
    <informationRequirement id="InformationRequirement_2">
      <requiredInput href="#InputData_5" />
    </informationRequirement>
    <informationRequirement id="InformationRequirement_3">
      <requiredInput href="#InputData_6" />
    </informationRequirement>
    <informationRequirement id="InformationRequirement_4">
      <requiredInput href="#InputData_7" />
    </informationRequirement>
    <informationRequirement id="InformationRequirement_5">
      <requiredInput href="#InputData_8" />
    </informationRequirement>
    <informationRequirement id="InformationRequirement_6">
      <requiredInput href="#InputData_9" />
    </informationRequirement>
    <informationRequirement id="InformationRequirement_7">
      <requiredInput href="#InputData_10" />
    </informationRequirement>
    <informationRequirement id="InformationRequirement_8">
      <requiredInput href="#InputData_11" />
    </informationRequirement>
    <informationRequirement id="InformationRequirement_9">
      <requiredInput href="#InputData_12" />
    </informationRequirement>
    <informationRequirement id="InformationRequirement_10">
      <requiredInput href="#InputData_13" />
    </informationRequirement>
    <decisionTable id="DecisionTable_1">
      <input id="InputClause_1" label="toNumber(Object val)">
        <inputExpression id="LiteralExpression_8" typeRef="string">
          <text></text>
        </inputExpression>
      </input>
      <input id="InputClause_2" label="start, len">
        <inputExpression id="LiteralExpression_9" typeRef="boolean">
          <text></text>
        </inputExpression>
      </input>
      <input id="InputClause_3" label="startChar">
        <inputExpression id="LiteralExpression_10" typeRef="boolean">
          <text></text>
        </inputExpression>
      </input>
      <input id="InputClause_4" label="c1">
        <inputExpression id="LiteralExpression_11" typeRef="boolean">
          <text></text>
        </inputExpression>
      </input>
      <input id="InputClause_5" label="c2">
        <inputExpression id="LiteralExpression_12" typeRef="boolean">
          <text></text>
        </inputExpression>
      </input>
      <input id="InputClause_6" label="endchar">
        <inputExpression id="LiteralExpression_13" typeRef="boolean">
          <text></text>
        </inputExpression>
      </input>
      <input id="InputClause_7" label="start, end, s">
        <inputExpression id="LiteralExpression_14" typeRef="boolean">
          <text></text>
        </inputExpression>
      </input>
      <input id="InputClause_8" label="MSJVM_BUG_WORKAROUND">
        <inputExpression id="LiteralExpression_15" typeRef="boolean">
          <text></text>
        </inputExpression>
      </input>
      <input id="InputClause_9" label="c">
        <inputExpression id="LiteralExpression_16" typeRef="boolean">
          <text></text>
        </inputExpression>
      </input>
      <input id="InputClause_10" label="ex">
        <inputExpression id="LiteralExpression_17" typeRef="boolean">
          <text></text>
        </inputExpression>
      </input>
      <output id="OutputClause_1" label="toNumber(String s)" typeRef="string" />
      <rule id="DecisionRule_7">
        <inputEntry id="UnaryTests_7">
          <text>return toNumber((String) val);</text>
        </inputEntry>
        <inputEntry id="UnaryTests_8">
          <text>start == len</text>
        </inputEntry>
        <inputEntry id="UnaryTests_9">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_10">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_11">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_12">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_13">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_14">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_15">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_16">
          <text>-</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_18">
          <text>return +0.0;</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_8">
        <inputEntry id="UnaryTests_17">
          <text>return toNumber((String) val);</text>
        </inputEntry>
        <inputEntry id="UnaryTests_18">
          <text>start + 2 &lt; len</text>
        </inputEntry>
        <inputEntry id="UnaryTests_19">
          <text>startChar == '0'</text>
        </inputEntry>
        <inputEntry id="UnaryTests_20">
          <text>c1 == 'x' || c1 == 'X'</text>
        </inputEntry>
        <inputEntry id="UnaryTests_21">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_22">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_23">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_24">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_25">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_26">
          <text>-</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_19">
          <text>return stringToNumber(s, start + 2, 16);</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_9">
        <inputEntry id="UnaryTests_27">
          <text>return toNumber((String) val);</text>
        </inputEntry>
        <inputEntry id="UnaryTests_28">
          <text>start + 3 &lt; len &amp;&amp; s.charAt(start + 1) == '0'</text>
        </inputEntry>
        <inputEntry id="UnaryTests_29">
          <text>startChar == '+' || startChar == '-'</text>
        </inputEntry>
        <inputEntry id="UnaryTests_30">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_31">
          <text>c2 == 'x' || c2 == 'X'</text>
        </inputEntry>
        <inputEntry id="UnaryTests_32">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_33">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_34">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_35">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_36">
          <text>-</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_20">
          <text>return startChar == '-' ? -val : val;</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_10">
        <inputEntry id="UnaryTests_37">
          <text>return toNumber((String) val);</text>
        </inputEntry>
        <inputEntry id="UnaryTests_38">
          <text>start != len</text>
        </inputEntry>
        <inputEntry id="UnaryTests_39">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_40">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_41">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_42">
          <text>endChar == 'y'</text>
        </inputEntry>
        <inputEntry id="UnaryTests_43">
          <text>start + 7 == end &amp;&amp; s.regionMatches(start, "Infinity", 0, 8)</text>
        </inputEntry>
        <inputEntry id="UnaryTests_44">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_45">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_46">
          <text>-</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_21">
          <text>return startChar == '-' ? Double.NEGATIVE_INFINITY : Double.POSITIVE_INFINITY;</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_11">
        <inputEntry id="UnaryTests_47">
          <text>return toNumber((String) val);</text>
        </inputEntry>
        <inputEntry id="UnaryTests_48">
          <text>start != len</text>
        </inputEntry>
        <inputEntry id="UnaryTests_49">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_50">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_51">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_52">
          <text>endChar == 'y'</text>
        </inputEntry>
        <inputEntry id="UnaryTests_53">
          <text>start + 7 != end &amp;&amp; !(s.regionMatches(start, "Infinity", 0, 8))</text>
        </inputEntry>
        <inputEntry id="UnaryTests_54">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_55">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_56">
          <text>-</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_22">
          <text>return NaN;</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_12">
        <inputEntry id="UnaryTests_57">
          <text>return toNumber((String) val);</text>
        </inputEntry>
        <inputEntry id="UnaryTests_58">
          <text>start != len</text>
        </inputEntry>
        <inputEntry id="UnaryTests_59">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_60">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_61">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_62">
          <text>endChar != 'y'</text>
        </inputEntry>
        <inputEntry id="UnaryTests_63">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_64">
          <text>MSJVM_BUG_WORKAROUNDS</text>
        </inputEntry>
        <inputEntry id="UnaryTests_65">
          <text>('0' &gt; c &amp;&amp; c &gt; '9') &amp;&amp; c != '.' &amp;&amp; c != 'e' &amp;&amp; c != 'E' &amp;&amp; c != '+' &amp;&amp; c != '-'</text>
        </inputEntry>
        <inputEntry id="UnaryTests_66">
          <text>-</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_23">
          <text>return NaN;</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_13">
        <inputEntry id="UnaryTests_67">
          <text>return toNumber((String) val);</text>
        </inputEntry>
        <inputEntry id="UnaryTests_68">
          <text>start != len</text>
        </inputEntry>
        <inputEntry id="UnaryTests_69">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_70">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_71">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_72">
          <text>endChar != 'y'</text>
        </inputEntry>
        <inputEntry id="UnaryTests_73">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_74">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_75">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_76">
          <text>!(NumberFormatException ex)</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_24">
          <text>return Double.valueOf(sub).doubleValue();</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_14">
        <inputEntry id="UnaryTests_77">
          <text>return toNumber((String) val);</text>
        </inputEntry>
        <inputEntry id="UnaryTests_78">
          <text>start != len</text>
        </inputEntry>
        <inputEntry id="UnaryTests_79">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_80">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_81">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_82">
          <text>endChar != 'y'</text>
        </inputEntry>
        <inputEntry id="UnaryTests_83">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_84">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_85">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_86">
          <text>NumberFormatException ex</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_25">
          <text>return NaN;</text>
        </outputEntry>
      </rule>
    </decisionTable>
  </decision>
  <decision id="Decision_2" name="stringToNumber(String s, int start, int radix)">
    <informationRequirement id="InformationRequirement_11">
      <requiredDecision href="#Decision_1" />
    </informationRequirement>
    <informationRequirement id="InformationRequirement_12">
      <requiredInput href="#InputData_1" />
    </informationRequirement>
    <informationRequirement id="InformationRequirement_13">
      <requiredInput href="#InputData_2" />
    </informationRequirement>
    <informationRequirement id="InformationRequirement_14">
      <requiredInput href="#InputData_3" />
    </informationRequirement>
    <informationRequirement id="InformationRequirement_15">
      <requiredInput href="#InputData_4" />
    </informationRequirement>
    <decisionTable id="DecisionTable_2">
      <input id="InputClause_11" label="toNumber(String s)">
        <inputExpression id="LiteralExpression_26" typeRef="string">
          <text></text>
        </inputExpression>
      </input>
      <input id="InputClause_12" label="start, end">
        <inputExpression id="LiteralExpression_27" typeRef="boolean">
          <text></text>
        </inputExpression>
      </input>
      <input id="InputClause_13" label="sum">
        <inputExpression id="LiteralExpression_28" typeRef="boolean">
          <text></text>
        </inputExpression>
      </input>
      <input id="InputClause_14" label="radix">
        <inputExpression id="LiteralExpression_29" typeRef="boolean">
          <text></text>
        </inputExpression>
      </input>
      <input id="InputClause_15" label="nfe">
        <inputExpression id="LiteralExpression_30" typeRef="boolean">
          <text></text>
        </inputExpression>
      </input>
      <output id="OutputClause_2" label="stringToNumber(String s, int start, int radix)" typeRef="string" />
      <rule id="DecisionRule_15">
        <inputEntry id="UnaryTests_87">
          <text>(return startChar == '-' ? -val : val;) || (return stringToNumber(s, start + 2, 16);)</text>
        </inputEntry>
        <inputEntry id="UnaryTests_88">
          <text>start == end</text>
        </inputEntry>
        <inputEntry id="UnaryTests_89">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_90">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_91">
          <text>-</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_31">
          <text>return NaN;</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_16">
        <inputEntry id="UnaryTests_92">
          <text>(return startChar == '-' ? -val : val;) || (return stringToNumber(s, start + 2, 16);)</text>
        </inputEntry>
        <inputEntry id="UnaryTests_93">
          <text>start != end</text>
        </inputEntry>
        <inputEntry id="UnaryTests_94">
          <text>sum &gt;= 9007199254740992.0</text>
        </inputEntry>
        <inputEntry id="UnaryTests_95">
          <text>radix == 10</text>
        </inputEntry>
        <inputEntry id="UnaryTests_96">
          <text>!(NumberFormatException nfe)</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_32">
          <text>return Double.valueOf(s.substring(start, end)).doubleValue();</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_17">
        <inputEntry id="UnaryTests_97">
          <text>(return startChar == '-' ? -val : val;) || (return stringToNumber(s, start + 2, 16);)</text>
        </inputEntry>
        <inputEntry id="UnaryTests_98">
          <text>start != end</text>
        </inputEntry>
        <inputEntry id="UnaryTests_99">
          <text>sum &gt;= 9007199254740992.0</text>
        </inputEntry>
        <inputEntry id="UnaryTests_100">
          <text>radix == 10</text>
        </inputEntry>
        <inputEntry id="UnaryTests_101">
          <text>NumberFormatException nfe</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_33">
          <text>return NaN;</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_18">
        <inputEntry id="UnaryTests_102">
          <text>(return startChar == '-' ? -val : val;) || (return stringToNumber(s, start + 2, 16);)</text>
        </inputEntry>
        <inputEntry id="UnaryTests_103">
          <text>start != end</text>
        </inputEntry>
        <inputEntry id="UnaryTests_104">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_105">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_106">
          <text>-</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_34">
          <text>return NaN;</text>
        </outputEntry>
      </rule>
    </decisionTable>
  </decision>
  <dmndi:DMNDI>
    <dmndi:DMNDiagram id="DMNDiagram_0">
      <dmndi:DMNShape id="DMNShape_0" dmnElementRef="InputData_0">
        <dc:Bounds height="45" width="125" x="50" y="550" />
      </dmndi:DMNShape>
      <dmndi:DMNShape id="DMNShape_1" dmnElementRef="InputData_1">
        <dc:Bounds height="45" width="125" x="200" y="550" />
      </dmndi:DMNShape>
      <dmndi:DMNShape id="DMNShape_2" dmnElementRef="InputData_2">
        <dc:Bounds height="45" width="125" x="350" y="550" />
      </dmndi:DMNShape>
      <dmndi:DMNShape id="DMNShape_3" dmnElementRef="InputData_3">
        <dc:Bounds height="45" width="125" x="500" y="550" />
      </dmndi:DMNShape>
      <dmndi:DMNShape id="DMNShape_4" dmnElementRef="InputData_4">
        <dc:Bounds height="45" width="125" x="650" y="550" />
      </dmndi:DMNShape>
      <dmndi:DMNShape id="DMNShape_5" dmnElementRef="InputData_5">
        <dc:Bounds height="45" width="125" x="800" y="550" />
      </dmndi:DMNShape>
      <dmndi:DMNShape id="DMNShape_6" dmnElementRef="InputData_6">
        <dc:Bounds height="45" width="125" x="950" y="550" />
      </dmndi:DMNShape>
      <dmndi:DMNShape id="DMNShape_7" dmnElementRef="InputData_7">
        <dc:Bounds height="45" width="125" x="1100" y="550" />
      </dmndi:DMNShape>
      <dmndi:DMNShape id="DMNShape_8" dmnElementRef="InputData_8">
        <dc:Bounds height="45" width="125" x="1250" y="550" />
      </dmndi:DMNShape>
      <dmndi:DMNShape id="DMNShape_9" dmnElementRef="InputData_9">
        <dc:Bounds height="45" width="125" x="1400" y="550" />
      </dmndi:DMNShape>
      <dmndi:DMNShape id="DMNShape_10" dmnElementRef="InputData_10">
        <dc:Bounds height="45" width="125" x="1550" y="550" />
      </dmndi:DMNShape>
      <dmndi:DMNShape id="DMNShape_11" dmnElementRef="InputData_11">
        <dc:Bounds height="45" width="125" x="1700" y="550" />
      </dmndi:DMNShape>
      <dmndi:DMNShape id="DMNShape_12" dmnElementRef="InputData_12">
        <dc:Bounds height="45" width="125" x="1850" y="550" />
      </dmndi:DMNShape>
      <dmndi:DMNShape id="DMNShape_13" dmnElementRef="InputData_13">
        <dc:Bounds height="45" width="125" x="2000" y="550" />
      </dmndi:DMNShape>
      <dmndi:DMNShape id="DMNShape_14" dmnElementRef="Decision_0">
        <dc:Bounds height="80" width="180" x="200" y="400" />
      </dmndi:DMNShape>
      <dmndi:DMNShape id="DMNShape_15" dmnElementRef="Decision_1">
        <dc:Bounds height="80" width="180" x="600" y="250" />
      </dmndi:DMNShape>
      <dmndi:DMNShape id="DMNShape_16" dmnElementRef="Decision_2">
        <dc:Bounds height="80" width="180" x="400" y="100" />
      </dmndi:DMNShape>
      <dmndi:DMNEdge id="DMNEdge_0" dmnElementRef="InformationRequirement_0">
        <di:waypoint x="112" y="550" />
        <di:waypoint x="290" y="480" />
      </dmndi:DMNEdge>
      <dmndi:DMNEdge id="DMNEdge_1" dmnElementRef="InformationRequirement_1">
        <di:waypoint x="290" y="400" />
        <di:waypoint x="690" y="330" />
      </dmndi:DMNEdge>
      <dmndi:DMNEdge id="DMNEdge_2" dmnElementRef="InformationRequirement_2">
        <di:waypoint x="862" y="550" />
        <di:waypoint x="690" y="330" />
      </dmndi:DMNEdge>
      <dmndi:DMNEdge id="DMNEdge_3" dmnElementRef="InformationRequirement_3">
        <di:waypoint x="1012" y="550" />
        <di:waypoint x="690" y="330" />
      </dmndi:DMNEdge>
      <dmndi:DMNEdge id="DMNEdge_4" dmnElementRef="InformationRequirement_4">
        <di:waypoint x="1162" y="550" />
        <di:waypoint x="690" y="330" />
      </dmndi:DMNEdge>
      <dmndi:DMNEdge id="DMNEdge_5" dmnElementRef="InformationRequirement_5">
        <di:waypoint x="1312" y="550" />
        <di:waypoint x="690" y="330" />
      </dmndi:DMNEdge>
      <dmndi:DMNEdge id="DMNEdge_6" dmnElementRef="InformationRequirement_6">
        <di:waypoint x="1462" y="550" />
        <di:waypoint x="690" y="330" />
      </dmndi:DMNEdge>
      <dmndi:DMNEdge id="DMNEdge_7" dmnElementRef="InformationRequirement_7">
        <di:waypoint x="1612" y="550" />
        <di:waypoint x="690" y="330" />
      </dmndi:DMNEdge>
      <dmndi:DMNEdge id="DMNEdge_8" dmnElementRef="InformationRequirement_8">
        <di:waypoint x="1762" y="550" />
        <di:waypoint x="690" y="330" />
      </dmndi:DMNEdge>
      <dmndi:DMNEdge id="DMNEdge_9" dmnElementRef="InformationRequirement_9">
        <di:waypoint x="1912" y="550" />
        <di:waypoint x="690" y="330" />
      </dmndi:DMNEdge>
      <dmndi:DMNEdge id="DMNEdge_10" dmnElementRef="InformationRequirement_10">
        <di:waypoint x="2062" y="550" />
        <di:waypoint x="690" y="330" />
      </dmndi:DMNEdge>
      <dmndi:DMNEdge id="DMNEdge_11" dmnElementRef="InformationRequirement_11">
        <di:waypoint x="690" y="250" />
        <di:waypoint x="490" y="180" />
      </dmndi:DMNEdge>
      <dmndi:DMNEdge id="DMNEdge_12" dmnElementRef="InformationRequirement_12">
        <di:waypoint x="262" y="550" />
        <di:waypoint x="490" y="180" />
      </dmndi:DMNEdge>
      <dmndi:DMNEdge id="DMNEdge_13" dmnElementRef="InformationRequirement_13">
        <di:waypoint x="412" y="550" />
        <di:waypoint x="490" y="180" />
      </dmndi:DMNEdge>
      <dmndi:DMNEdge id="DMNEdge_14" dmnElementRef="InformationRequirement_14">
        <di:waypoint x="562" y="550" />
        <di:waypoint x="490" y="180" />
      </dmndi:DMNEdge>
      <dmndi:DMNEdge id="DMNEdge_15" dmnElementRef="InformationRequirement_15">
        <di:waypoint x="712" y="550" />
        <di:waypoint x="490" y="180" />
      </dmndi:DMNEdge>
    </dmndi:DMNDiagram>
  </dmndi:DMNDI>
</definitions>

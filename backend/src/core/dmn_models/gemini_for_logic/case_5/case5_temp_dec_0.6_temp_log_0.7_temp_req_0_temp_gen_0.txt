```xml
<?xml version="1.0" encoding="UTF-8"?>
<definitions xmlns="https://www.omg.org/spec/DMN/20191111/MODEL/" xmlns:dmndi="https://www.omg.org/spec/DMN/20191111/DMNDI/" xmlns:dc="http://www.omg.org/spec/DMN/20180521/DC/" xmlns:di="http://www.omg.org/spec/DMN/20180521/DI/" id="definitions_model_0" name="definitions" namespace="http://camunda.org/schema/1.0/dmn" exporter="GeneratedDMN" exporterVersion="1.0">
  <inputData id="InputData_1" name="MSJVM_BUG_WORKAROUNDS" />
  <inputData id="InputData_2" name="bit" />
  <inputData id="InputData_3" name="bit53, bit54" />
  <inputData id="InputData_4" name="bit54" />
  <inputData id="InputData_5" name="c" />
  <inputData id="InputData_6" name="c, radix" />
  <inputData id="InputData_7" name="c1" />
  <inputData id="InputData_8" name="c2" />
  <inputData id="InputData_9" name="digit" />
  <inputData id="InputData_10" name="end, len" />
  <inputData id="InputData_11" name="endChar" />
  <inputData id="InputData_12" name="exactBitsLimit" />
  <inputData id="InputData_13" name="index, args" />
  <inputData id="InputData_14" name="radix" />
  <inputData id="InputData_15" name="s, start" />
  <inputData id="InputData_16" name="start, end" />
  <inputData id="InputData_17" name="start, len" />
  <inputData id="InputData_18" name="startChar" />
  <inputData id="InputData_19" name="state" />
  <inputData id="InputData_20" name="sum" />
  <inputData id="InputData_21" name="val" />
  <decision id="Decision_1" name="toNumber(Object val)">
    <informationRequirement id="InformationRequirement_1">
      <requiredInput href="#InputData_21" />
    </informationRequirement>
    <informationRequirement id="InformationRequirement_2">
      <requiredDecision href="#Decision_4" />
    </informationRequirement>
    <decisionTable id="DecisionTable_1">
      <input id="InputClause_1" label="val">
        <inputExpression id="LiteralExpression_1" typeRef="Object">
          <text></text>
        </inputExpression>
      </input>
      <output id="OutputClause_1" label="toNumber(Object val)" typeRef="string" />
      <rule id="DecisionRule_1">
        <inputEntry id="UnaryTests_1">
          <text>val instanceof Number</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_2">
          <text>return ((Number) val).doubleValue();</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_2">
        <inputEntry id="UnaryTests_2">
          <text>val == null</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_3">
          <text>return +0.0;</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_3">
        <inputEntry id="UnaryTests_3">
          <text>val == Undefined.instance</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_4">
          <text>return NaN;</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_4">
        <inputEntry id="UnaryTests_4">
          <text>val instanceof String</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_5">
          <text>return toNumber((String) val);</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_5">
        <inputEntry id="UnaryTests_5">
          <text>val instanceof Boolean &amp;&amp; ((Boolean) val).booleanValue()</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_6">
          <text>return 1;</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_6">
        <inputEntry id="UnaryTests_6">
          <text>val instanceof Boolean &amp;&amp; !((Boolean) val).booleanValue()</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_7">
          <text>return +0.0;</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_7">
        <inputEntry id="UnaryTests_7">
          <text>val instanceof Scriptable &amp;&amp; (((Scriptable) val).getDefaultValue(NumberClass)) instanceof Scriptable</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_8">
          <text>throw errorWithClassName("msg.primitive.expected", ((Scriptable) val).getDefaultValue(NumberClass));</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_8">
        <inputEntry id="UnaryTests_8">
          <text>!(val instanceof Number) &amp;&amp; val != null &amp;&amp; val != Undefined.instance &amp;&amp; !(val instanceof String) &amp;&amp; !(val instanceof Boolean) &amp;&amp; !(val instanceof Scriptable)</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_9">
          <text>warnAboutNonJSObject(val); return NaN;</text>
        </outputEntry>
      </rule>
    </decisionTable>
  </decision>
  <decision id="Decision_2" name="toNumber(Object[] args, int index)">
    <informationRequirement id="InformationRequirement_3">
      <requiredInput href="#InputData_13" />
    </informationRequirement>
    <informationRequirement id="InformationRequirement_4">
      <requiredDecision href="#Decision_1" />
    </informationRequirement>
    <decisionTable id="DecisionTable_2">
      <input id="InputClause_2" label="index, args">
        <inputExpression id="LiteralExpression_10" typeRef="boolean">
          <text></text>
        </inputExpression>
      </input>
      <output id="OutputClause_2" label="toNumber(Object[] args, int index)" typeRef="string" />
      <rule id="DecisionRule_9">
        <inputEntry id="UnaryTests_9">
          <text>index &lt; args.length</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_11">
          <text>toNumber(args[index])</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_10">
        <inputEntry id="UnaryTests_10">
          <text>index &gt;= args.length</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_12">
          <text>NaN</text>
        </outputEntry>
      </rule>
    </decisionTable>
  </decision>
  <decision id="Decision_3" name="stringToNumber(String s, int start, int radix)">
    <informationRequirement id="InformationRequirement_5">
      <requiredInput href="#InputData_14" />
    </informationRequirement>
    <informationRequirement id="InformationRequirement_6">
      <requiredInput href="#InputData_10" />
    </informationRequirement>
    <informationRequirement id="InformationRequirement_7">
      <requiredInput href="#InputData_6" />
    </informationRequirement>
    <informationRequirement id="InformationRequirement_8">
      <requiredInput href="#InputData_16" />
    </informationRequirement>
    <informationRequirement id="InformationRequirement_9">
      <requiredInput href="#InputData_20" />
    </informationRequirement>
    <informationRequirement id="InformationRequirement_10">
      <requiredInput href="#InputData_9" />
    </informationRequirement>
    <informationRequirement id="InformationRequirement_11">
      <requiredInput href="#InputData_2" />
    </informationRequirement>
    <informationRequirement id="InformationRequirement_12">
      <requiredInput href="#InputData_19" />
    </informationRequirement>
    <informationRequirement id="InformationRequirement_13">
      <requiredInput href="#InputData_12" />
    </informationRequirement>
    <informationRequirement id="InformationRequirement_14">
      <requiredInput href="#InputData_3" />
    </informationRequirement>
    <informationRequirement id="InformationRequirement_15">
      <requiredInput href="#InputData_4" />
    </informationRequirement>
    <decisionTable id="DecisionTable_3">
      <input id="InputClause_3" label="start, end">
        <inputExpression id="LiteralExpression_13" typeRef="boolean">
          <text></text>
        </inputExpression>
      </input>
      <input id="InputClause_4" label="sum">
        <inputExpression id="LiteralExpression_14" typeRef="boolean">
          <text></text>
        </inputExpression>
      </input>
      <input id="InputClause_5" label="radix">
        <inputExpression id="LiteralExpression_15" typeRef="integer">
          <text></text>
        </inputExpression>
      </input>
      <output id="OutputClause_3" label="stringToNumber(String s, int start, int radix)" typeRef="string" />
      <rule id="DecisionRule_11">
        <inputEntry id="UnaryTests_11">
          <text>start == end</text>
        </inputEntry>
        <inputEntry id="UnaryTests_12">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_13">
          <text>-</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_16">
          <text>return NaN;</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_12">
        <inputEntry id="UnaryTests_14">
          <text>!(start == end)</text>
        </inputEntry>
        <inputEntry id="UnaryTests_15">
          <text>sum &gt;= 9007199254740992.0</text>
        </inputEntry>
        <inputEntry id="UnaryTests_16">
          <text>radix == 10</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_17">
          <text>return Double.valueOf(s.substring(start, end)).doubleValue();</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_13">
        <inputEntry id="UnaryTests_17">
          <text>!(start == end)</text>
        </inputEntry>
        <inputEntry id="UnaryTests_18">
          <text>sum &gt;= 9007199254740992.0</text>
        </inputEntry>
        <inputEntry id="UnaryTests_19">
          <text>radix == 10</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_18">
          <text>return NaN;</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_14">
        <inputEntry id="UnaryTests_20">
          <text>!(start == end)</text>
        </inputEntry>
        <inputEntry id="UnaryTests_21">
          <text>sum &gt;= 9007199254740992.0</text>
        </inputEntry>
        <inputEntry id="UnaryTests_22">
          <text>radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_19">
          <text>return sum;</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_15">
        <inputEntry id="UnaryTests_23">
          <text>!(start == end)</text>
        </inputEntry>
        <inputEntry id="UnaryTests_24">
          <text>sum &gt;= 9007199254740992.0</text>
        </inputEntry>
        <inputEntry id="UnaryTests_25">
          <text>!(radix == 10) &amp;&amp; !(radix == 2 || radix == 4 || radix == 8 || radix == 16 || radix == 32)</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_20">
          <text>return sum;</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_16">
        <inputEntry id="UnaryTests_26">
          <text>!(start == end)</text>
        </inputEntry>
        <inputEntry id="UnaryTests_27">
          <text>sum &lt; 9007199254740992.0</text>
        </inputEntry>
        <inputEntry id="UnaryTests_28">
          <text>-</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_21">
          <text>return sum;</text>
        </outputEntry>
      </rule>
    </decisionTable>
  </decision>
  <decision id="Decision_4" name="toNumber(String s)">
    <informationRequirement id="InformationRequirement_16">
      <requiredInput href="#InputData_17" />
    </informationRequirement>
    <informationRequirement id="InformationRequirement_17">
      <requiredInput href="#InputData_18" />
    </informationRequirement>
    <informationRequirement id="InformationRequirement_18">
      <requiredInput href="#InputData_7" />
    </informationRequirement>
    <informationRequirement id="InformationRequirement_19">
      <requiredInput href="#InputData_15" />
    </informationRequirement>
    <informationRequirement id="InformationRequirement_20">
      <requiredInput href="#InputData_8" />
    </informationRequirement>
    <informationRequirement id="InformationRequirement_21">
      <requiredInput href="#InputData_11" />
    </informationRequirement>
    <informationRequirement id="InformationRequirement_22">
      <requiredInput href="#InputData_16" />
    </informationRequirement>
    <informationRequirement id="InformationRequirement_23">
      <requiredInput href="#InputData_1" />
    </informationRequirement>
    <informationRequirement id="InformationRequirement_24">
      <requiredInput href="#InputData_5" />
    </informationRequirement>
    <informationRequirement id="InformationRequirement_25">
      <requiredDecision href="#Decision_3" />
    </informationRequirement>
    <decisionTable id="DecisionTable_4">
      <input id="InputClause_6" label="is_empty_or_whitespace">
        <inputExpression id="LiteralExpression_22" typeRef="boolean">
          <text></text>
        </inputExpression>
      </input>
      <input id="InputClause_7" label="is_hex_no_sign_pattern">
        <inputExpression id="LiteralExpression_23" typeRef="boolean">
          <text></text>
        </inputExpression>
      </input>
      <input id="InputClause_8" label="is_hex_with_sign_pattern">
        <inputExpression id="LiteralExpression_24" typeRef="boolean">
          <text></text>
        </inputExpression>
      </input>
      <input id="InputClause_9" label="is_infinity_candidate_suffix">
        <inputExpression id="LiteralExpression_25" typeRef="boolean">
          <text></text>
        </inputExpression>
      </input>
      <input id="InputClause_10" label="matches_infinity_string_and_length">
        <inputExpression id="LiteralExpression_26" typeRef="boolean">
          <text></text>
        </inputExpression>
      </input>
      <input id="InputClause_11" label="msjvm_workaround_active">
        <inputExpression id="LiteralExpression_27" typeRef="boolean">
          <text></text>
        </inputExpression>
      </input>
      <input id="InputClause_12" label="msjvm_found_invalid_char_in_sub">
        <inputExpression id="LiteralExpression_28" typeRef="boolean">
          <text></text>
        </inputExpression>
      </input>
      <input id="InputClause_13" label="generic_parse_threw_exception">
        <inputExpression id="LiteralExpression_29" typeRef="boolean">
          <text></text>
        </inputExpression>
      </input>
      <output id="OutputClause_4" label="toNumber(String s)" typeRef="string" />
      <rule id="DecisionRule_17">
        <inputEntry id="UnaryTests_29">
          <text>start == len</text>
        </inputEntry>
        <inputEntry id="UnaryTests_30">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_31">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_32">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_33">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_34">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_35">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_36">
          <text>-</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_30">
          <text>return +0.0;</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_18">
        <inputEntry id="UnaryTests_37">
          <text>!(start == len)</text>
        </inputEntry>
        <inputEntry id="UnaryTests_38">
          <text>startChar == '0' &amp;&amp; start + 2 &lt; len &amp;&amp; (s.charAt(start + 1) == 'x' || s.charAt(start + 1) == 'X')</text>
        </inputEntry>
        <inputEntry id="UnaryTests_39">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_40">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_41">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_42">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_43">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_44">
          <text>-</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_31">
          <text>return stringToNumber(s, start + 2, 16);</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_19">
        <inputEntry id="UnaryTests_45">
          <text>!(start == len)</text>
        </inputEntry>
        <inputEntry id="UnaryTests_46">
          <text>!(startChar == '0' &amp;&amp; start + 2 &lt; len &amp;&amp; (s.charAt(start + 1) == 'x' || s.charAt(start + 1) == 'X'))</text>
        </inputEntry>
        <inputEntry id="UnaryTests_47">
          <text>(startChar == '+' || startChar == '-') &amp;&amp; start + 3 &lt; len &amp;&amp; s.charAt(start + 1) == '0' &amp;&amp; (s.charAt(start + 2) == 'x' || s.charAt(start + 2) == 'X')</text>
        </inputEntry>
        <inputEntry id="UnaryTests_48">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_49">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_50">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_51">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_52">
          <text>-</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_32">
          <text>double val = stringToNumber(s, start + 3, 16); return startChar == '-' ? -val : val;</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_20">
        <inputEntry id="UnaryTests_53">
          <text>!(start == len)</text>
        </inputEntry>
        <inputEntry id="UnaryTests_54">
          <text>!(startChar == '0' &amp;&amp; start + 2 &lt; len &amp;&amp; (s.charAt(start + 1) == 'x' || s.charAt(start + 1) == 'X'))</text>
        </inputEntry>
        <inputEntry id="UnaryTests_55">
          <text>!((startChar == '+' || startChar == '-') &amp;&amp; start + 3 &lt; len &amp;&amp; s.charAt(start + 1) == '0' &amp;&amp; (s.charAt(start + 2) == 'x' || s.charAt(start + 2) == 'X'))</text>
        </inputEntry>
        <inputEntry id="UnaryTests_56">
          <text>endChar == 'y'</text>
        </inputEntry>
        <inputEntry id="UnaryTests_57">
          <text>((startChar == '+' || startChar == '-') ? start + 1 : start) + 7 == end &amp;&amp; s.regionMatches(((startChar == '+' || startChar == '-') ? start + 1 : start), "Infinity", 0, 8)</text>
        </inputEntry>
        <inputEntry id="UnaryTests_58">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_59">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_60">
          <text>-</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_33">
          <text>return startChar == '-' ? Double.NEGATIVE_INFINITY : Double.POSITIVE_INFINITY;</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_21">
        <inputEntry id="UnaryTests_61">
          <text>!(start == len)</text>
        </inputEntry>
        <inputEntry id="UnaryTests_62">
          <text>!(startChar == '0' &amp;&amp; start + 2 &lt; len &amp;&amp; (s.charAt(start + 1) == 'x' || s.charAt(start + 1) == 'X'))</text>
        </inputEntry>
        <inputEntry id="UnaryTests_63">
          <text>!((startChar == '+' || startChar == '-') &amp;&amp; start + 3 &lt; len &amp;&amp; s.charAt(start + 1) == '0' &amp;&amp; (s.charAt(start + 2) == 'x' || s.charAt(start + 2) == 'X'))</text>
        </inputEntry>
        <inputEntry id="UnaryTests_64">
          <text>endChar == 'y'</text>
        </inputEntry>
        <inputEntry id="UnaryTests_65">
          <text>!(((startChar == '+' || startChar == '-') ? start + 1 : start) + 7 == end &amp;&amp; s.regionMatches(((startChar == '+' || startChar == '-') ? start + 1 : start), "Infinity", 0, 8))</text>
        </inputEntry>
        <inputEntry id="UnaryTests_66">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_67">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_68">
          <text>-</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_34">
          <text>return NaN;</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_22">
        <inputEntry id="UnaryTests_69">
          <text>!(start == len)</text>
        </inputEntry>
        <inputEntry id="UnaryTests_70">
          <text>!(startChar == '0' &amp;&amp; start + 2 &lt; len &amp;&amp; (s.charAt(start + 1) == 'x' || s.charAt(start + 1) == 'X'))</text>
        </inputEntry>
        <inputEntry id="UnaryTests_71">
          <text>!((startChar == '+' || startChar == '-') &amp;&amp; start + 3 &lt; len &amp;&amp; s.charAt(start + 1) == '0' &amp;&amp; (s.charAt(start + 2) == 'x' || s.charAt(start + 2) == 'X'))</text>
        </inputEntry>
        <inputEntry id="UnaryTests_72">
          <text>!(endChar == 'y')</text>
        </inputEntry>
        <inputEntry id="UnaryTests_73">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_74">
          <text>MSJVM_BUG_WORKAROUNDS</text>
        </inputEntry>
        <inputEntry id="UnaryTests_75">
          <text>true</text>
        </inputEntry>
        <inputEntry id="UnaryTests_76">
          <text>-</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_35">
          <text>return NaN;</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_23">
        <inputEntry id="UnaryTests_77">
          <text>!(start == len)</text>
        </inputEntry>
        <inputEntry id="UnaryTests_78">
          <text>!(startChar == '0' &amp;&amp; start + 2 &lt; len &amp;&amp; (s.charAt(start + 1) == 'x' || s.charAt(start + 1) == 'X'))</text>
        </inputEntry>
        <inputEntry id="UnaryTests_79">
          <text>!((startChar == '+' || startChar == '-') &amp;&amp; start + 3 &lt; len &amp;&amp; s.charAt(start + 1) == '0' &amp;&amp; (s.charAt(start + 2) == 'x' || s.charAt(start + 2) == 'X'))</text>
        </inputEntry>
        <inputEntry id="UnaryTests_80">
          <text>!(endChar == 'y')</text>
        </inputEntry>
        <inputEntry id="UnaryTests_81">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_82">
          <text>(MSJVM_BUG_WORKAROUNDS == false) || (MSJVM_BUG_WORKAROUNDS == true &amp;&amp; msjvm_found_invalid_char_in_sub == false)</text>
        </inputEntry>
        <inputEntry id="UnaryTests_83">
          <text>false</text>
        </inputEntry>
        <inputEntry id="UnaryTests_84">
          <text>false</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_36">
          <text>return Double.valueOf(sub).doubleValue();</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_24">
        <inputEntry id="UnaryTests_85">
          <text>!(start == len)</text>
        </inputEntry>
        <inputEntry id="UnaryTests_86">
          <text>!(startChar == '0' &amp;&amp; start + 2 &lt; len &amp;&amp; (s.charAt(start + 1) == 'x' || s.charAt(start + 1) == 'X'))</text>
        </inputEntry>
        <inputEntry id="UnaryTests_87">
          <text>!((startChar == '+' || startChar == '-') &amp;&amp; start + 3 &lt; len &amp;&amp; s.charAt(start + 1) == '0' &amp;&amp; (s.charAt(start + 2) == 'x' || s.charAt(start + 2) == 'X'))</text>
        </inputEntry>
        <inputEntry id="UnaryTests_88">
          <text>!(endChar == 'y')</text>
        </inputEntry>
        <inputEntry id="UnaryTests_89">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_90">
          <text>(MSJVM_BUG_WORKAROUNDS == false) || (MSJVM_BUG_WORKAROUNDS == true &amp;&amp; msjvm_found_invalid_char_in_sub == false)</text>
        </inputEntry>
        <inputEntry id="UnaryTests_91">
          <text>false</text>
        </inputEntry>
        <inputEntry id="UnaryTests_92">
          <text>true</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_37">
          <text>return NaN;</text>
        </outputEntry>
      </rule>
    </decisionTable>
  </decision>
  <dmndi:DMNDI>
    <dmndi:DMNDiagram id="DMNDiagram_1">
      <dmndi:DMNShape id="DMNShape_InputData_1" dmnElementRef="InputData_1">
        <dc:Bounds height="45" width="125" x="100" y="50" />
      </dmndi:DMNShape>
      <dmndi:DMNShape id="DMNShape_InputData_2" dmnElementRef="InputData_2">
        <dc:Bounds height="45" width="125" x="100" y="105" />
      </dmndi:DMNShape>
      <dmndi:DMNShape id="DMNShape_InputData_3" dmnElementRef="InputData_3">
        <dc:Bounds height="45" width="125" x="100" y="160" />
      </dmndi:DMNShape>
      <dmndi:DMNShape id="DMNShape_InputData_4" dmnElementRef="InputData_4">
        <dc:Bounds height="45" width="125" x="100" y="215" />
      </dmndi:DMNShape>
      <dmndi:DMNShape id="DMNShape_InputData_5" dmnElementRef="InputData_5">
        <dc:Bounds height="45" width="125" x="100" y="270" />
      </dmndi:DMNShape>
      <dmndi:DMNShape id="DMNShape_InputData_6" dmnElementRef="InputData_6">
        <dc:Bounds height="45" width="125" x="100" y="325" />
      </dmndi:DMNShape>
      <dmndi:DMNShape id="DMNShape_InputData_7" dmnElementRef="InputData_7">
        <dc:Bounds height="45" width="125" x="100" y="380" />
      </dmndi:DMNShape>
      <dmndi:DMNShape id="DMNShape_InputData_8" dmnElementRef="InputData_8">
        <dc:Bounds height="45" width="125" x="100" y="435" />
      </dmndi:DMNShape>
      <dmndi:DMNShape id="DMNShape_InputData_9" dmnElementRef="InputData_9">
        <dc:Bounds height="45" width="125" x="100" y="490" />
      </dmndi:DMNShape>
      <dmndi:DMNShape id="DMNShape_InputData_10" dmnElementRef="InputData_10">
        <dc:Bounds height="45" width="125" x="100" y="545" />
      </dmndi:DMNShape>
      <dmndi:DMNShape id="DMNShape_InputData_11" dmnElementRef="InputData_11">
        <dc:Bounds height="45" width="125" x="100" y="600" />
      </dmndi:DMNShape>
      <dmndi:DMNShape id="DMNShape_InputData_12" dmnElementRef="InputData_12">
        <dc:Bounds height="45" width="125" x="100" y="655" />
      </dmndi:DMNShape>
      <dmndi:DMNShape id="DMNShape_InputData_13" dmnElementRef="InputData_13">
        <dc:Bounds height="45" width="125" x="100" y="710" />
      </dmndi:DMNShape>
      <dmndi:DMNShape id="DMNShape_InputData_14" dmnElementRef="InputData_14">
        <dc:Bounds height="45" width="125" x="100" y="765" />
      </dmndi:DMNShape>
      <dmndi:DMNShape id="DMNShape_InputData_15" dmnElementRef="InputData_15">
        <dc:Bounds height="45" width="125" x="100" y="820" />
      </dmndi:DMNShape>
      <dmndi:DMNShape id="DMNShape_InputData_16" dmnElementRef="InputData_16">
        <dc:Bounds height="45" width="125" x="100" y="875" />
      </dmndi:DMNShape>
      <dmndi:DMNShape id="DMNShape_InputData_17" dmnElementRef="InputData_17">
        <dc:Bounds height="45" width="125" x="100" y="930" />
      </dmndi:DMNShape>
      <dmndi:DMNShape id="DMNShape_InputData_18" dmnElementRef="InputData_18">
        <dc:Bounds height="45" width="125" x="100" y="985" />
      </dmndi:DMNShape>
      <dmndi:DMNShape id="DMNShape_InputData_19" dmnElementRef="InputData_19">
        <dc:Bounds height="45" width="125" x="100" y="1040" />
      </dmndi:DMNShape>
      <dmndi:DMNShape id="DMNShape_InputData_20" dmnElementRef="InputData_20">
        <dc:Bounds height="45" width="125" x="100" y="1095" />
      </dmndi:DMNShape>
      <dmndi:DMNShape id="DMNShape_InputData_21" dmnElementRef="InputData_21">
        <dc:Bounds height="45" width="125" x="100" y="1150" />
      </dmndi:DMNShape>
      <dmndi:DMNShape id="DMNShape_Decision_1" dmnElementRef="Decision_1">
        <dc:Bounds height="80" width="180" x="300" y="50" />
      </dmndi:DMNShape>
      <dmndi:DMNShape id="DMNShape_Decision_2" dmnElementRef="Decision_2">
        <dc:Bounds height="80" width="180" x="300" y="140" />
      </dmndi:DMNShape>
      <dmndi:DMNShape id="DMNShape_Decision_3" dmnElementRef="Decision_3">
        <dc:Bounds height="80" width="180" x="300" y="230" />
      </dmndi:DMNShape>
      <dmndi:DMNShape id="DMNShape_Decision_4" dmnElementRef="Decision_4">
        <dc:Bounds height="80" width="180" x="300" y="320" />
      </dmndi:DMNShape>
      <dmndi:DMNEdge id="DMNEdge_InformationRequirement_1" dmnElementRef="InformationRequirement_1">
        <di:waypoint x="162" y="1150" /><di:waypoint x="390" y="90" />
      </dmndi:DMNEdge>
      <dmndi:DMNEdge id="DMNEdge_InformationRequirement_2" dmnElementRef="InformationRequirement_2">
        <di:waypoint x="390" y="320" /><di:waypoint x="390" y="90" />
      </dmndi:DMNEdge>
      <dmndi:DMNEdge id="DMNEdge_InformationRequirement_3" dmnElementRef="InformationRequirement_3">
        <di:waypoint x="162" y="710" /><di:waypoint x="390" y="180" />
      </dmndi:DMNEdge>
      <dmndi:DMNEdge id="DMNEdge_InformationRequirement_4" dmnElementRef="InformationRequirement_4">
        <di:waypoint x="390" y="50" /><di:waypoint x="390" y="180" />
      </dmndi:DMNEdge>
      <dmndi:DMNEdge id="DMNEdge_InformationRequirement_5" dmnElementRef="InformationRequirement_5">
        <di:waypoint x="162" y="765" /><di:waypoint x="390" y="270" />
      </dmndi:DMNEdge>
      <dmndi:DMNEdge id="DMNEdge_InformationRequirement_6" dmnElementRef="InformationRequirement_6">
        <di:waypoint x="162" y="545" /><di:waypoint x="390" y="270" />
      </dmndi:DMNEdge>
      <dmndi:DMNEdge id="DMNEdge_InformationRequirement_7" dmnElementRef="InformationRequirement_7">
        <di:waypoint x="162" y="325" /><di:waypoint x="390" y="270" />
      </dmndi:DMNEdge>
      <dmndi:DMNEdge id="DMNEdge_InformationRequirement_8" dmnElementRef="InformationRequirement_8">
        <di:waypoint x="162" y="875" /><di:waypoint x="390" y="270" />
      </dmndi:DMNEdge>
      <dmndi:DMNEdge id="DMNEdge_InformationRequirement_9" dmnElementRef="InformationRequirement_9">
        <di:waypoint x="162" y="1095" /><di:waypoint x="390" y="270" />
      </dmndi:DMNEdge>
      <dmndi:DMNEdge id="DMNEdge_InformationRequirement_10" dmnElementRef="InformationRequirement_10">
        <di:waypoint x="162" y="490" /><di:waypoint x="390" y="270" />
      </dmndi:DMNEdge>
      <dmndi:DMNEdge id="DMNEdge_InformationRequirement_11" dmnElementRef="InformationRequirement_11">
        <di:waypoint x="162" y="105" /><di:waypoint x="390" y="270" />
      </dmndi:DMNEdge>
      <dmndi:DMNEdge id="DMNEdge_InformationRequirement_12" dmnElementRef="InformationRequirement_12">
        <di:waypoint x="162" y="1040" /><di:waypoint x="390" y="270" />
      </dmndi:DMNEdge>
      <dmndi:DMNEdge id="DMNEdge_InformationRequirement_13" dmnElementRef="InformationRequirement_13">
        <di:waypoint x="162" y="655" /><di:waypoint x="390" y="270" />
      </dmndi:DMNEdge>
      <dmndi:DMNEdge id="DMNEdge_InformationRequirement_14" dmnElementRef="InformationRequirement_14">
        <di:waypoint x="162" y="160" /><di:waypoint x="390" y="270" />
      </dmndi:DMNEdge>
      <dmndi:DMNEdge id="DMNEdge_InformationRequirement_15" dmnElementRef="InformationRequirement_15">
        <di:waypoint x="162" y="215" /><di:waypoint x="390" y="270" />
      </dmndi:DMNEdge>
      <dmndi:DMNEdge id="DMNEdge_InformationRequirement_16" dmnElementRef="InformationRequirement_16">
        <di:waypoint x="162" y="930" /><di:waypoint x="390" y="360" />
      </dmndi:DMNEdge>
      <dmndi:DMNEdge id="DMNEdge_InformationRequirement_17" dmnElementRef="InformationRequirement_17">
        <di:waypoint x="162" y="985" /><di:waypoint x="390" y="360" />
      </dmndi:DMNEdge>
      <dmndi:DMNEdge id="DMNEdge_InformationRequirement_18" dmnElementRef="InformationRequirement_18">
        <di:waypoint x="162" y="380" /><di:waypoint x="390" y="360" />
      </dmndi:DMNEdge>
      <dmndi:DMNEdge id="DMNEdge_InformationRequirement_19" dmnElementRef="InformationRequirement_19">
        <di:waypoint x="162" y="820" /><di:waypoint x="390" y="360" />
      </dmndi:DMNEdge>
      <dmndi:DMNEdge id="DMNEdge_InformationRequirement_20" dmnElementRef="InformationRequirement_20">
        <di:waypoint x="162" y="435" /><di:waypoint x="390" y="360" />
      </dmndi:DMNEdge>
      <dmndi:DMNEdge id="DMNEdge_InformationRequirement_21" dmnElementRef="InformationRequirement_21">
        <di:waypoint x="162" y="600" /><di:waypoint x="390" y="360" />
      </dmndi:DMNEdge>
      <dmndi:DMNEdge id="DMNEdge_InformationRequirement_22" dmnElementRef="InformationRequirement_22">
        <di:waypoint x="162" y="875" /><di:waypoint x="390" y="360" />
      </dmndi:DMNEdge>
      <dmndi:DMNEdge id="DMNEdge_InformationRequirement_23" dmnElementRef="InformationRequirement_23">
        <di:waypoint x="162" y="50" /><di:waypoint x="390" y="360" />
      </dmndi:DMNEdge>
      <dmndi:DMNEdge id="DMNEdge_InformationRequirement_24" dmnElementRef="InformationRequirement_24">
        <di:waypoint x="162" y="270" /><di:waypoint x="390" y="360" />
      </dmndi:DMNEdge>
      <dmndi:DMNEdge id="DMNEdge_InformationRequirement_25" dmnElementRef="InformationRequirement_25">
        <di:waypoint x="390" y="230" /><di:waypoint x="390" y="360" />
      </dmndi:DMNEdge>
    </dmndi:DMNDiagram>
  </dmndi:DMNDI>
</definitions>
```